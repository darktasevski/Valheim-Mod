<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Library</OutputType>
    <TargetFramework>net48</TargetFramework>
    <RootNamespace>JotunnModStub</RootNamespace>
    <AssemblyName>JotunnModStub</AssemblyName>
    <FileAlignment>512</FileAlignment>
    <Deterministic>true</Deterministic>
    <LangVersion>10</LangVersion>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <Optimize>false</Optimize>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>

  <ItemGroup>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="README.md" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="JotunnLib" Version="2.26.1" />
    <PackageReference Include="Pfhoenix.Valheim.ModProjectReferences" Version="1.0.23" />
  </ItemGroup>

  <PropertyGroup>
    <VALHEIM_MANAGED>$(VALHEIM_INSTALL)/valheim_Data/Managed</VALHEIM_MANAGED>
    <UNITY_FOLDER>$(SolutionDir)JotunnModStubUnity</UNITY_FOLDER>
    <COPY_DEST>$(TargetDir)</COPY_DEST>
    <ResolvedCopyDest Condition="'$(COPY_DEST)' != ''">$(COPY_DEST)</ResolvedCopyDest>
    <ResolvedCopyDest Condition="'$(COPY_DEST)' == '' and '$(TargetDir)' != ''">$(TargetDir)</ResolvedCopyDest>
    <ResolvedCopyDest Condition="'$(ResolvedCopyDest)' == '' and '$(OutputPath)' != ''">$(OutputPath)</ResolvedCopyDest>
    <ResolvedCopyDest Condition="'$(ResolvedCopyDest)' == ''">$(MSBuildProjectDirectory)\bin\$(Configuration)\</ResolvedCopyDest>
  </PropertyGroup>

  <Target Name="CopyToUnity" Condition="'$(ResolvedCopyDest)' != ''">
    <Message Text="Copy assemblies to Unity" Importance="high" />
    <MakeDir Directories="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(BEPINEX_PATH)/core/BepInEx.dll')" SourceFiles="$(BEPINEX_PATH)/core/BepInEx.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(BEPINEX_PATH)/core/0Harmony.dll')" SourceFiles="$(BEPINEX_PATH)/core/0Harmony.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(BEPINEX_PATH)/core/Mono.Cecil.dll')" SourceFiles="$(BEPINEX_PATH)/core/Mono.Cecil.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(BEPINEX_PATH)/core/MonoMod.Utils.dll')" SourceFiles="$(BEPINEX_PATH)/core/MonoMod.Utils.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(BEPINEX_PATH)/core/MonoMod.RuntimeDetour.dll')" SourceFiles="$(BEPINEX_PATH)/core/MonoMod.RuntimeDetour.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(TargetDir)Jotunn.dll')" SourceFiles="$(TargetDir)Jotunn.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy SourceFiles="$(TargetDir)$(TargetName).dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(TargetDir)$(TargetName).pdb')" SourceFiles="$(TargetDir)$(TargetName).pdb" DestinationFolder="$(ResolvedCopyDest)" />
    <!-- mdb generation doesn't work from portable pdbs, which are the only kind supported under Linux -->
    <Copy
      Condition="Exists('$(TargetDir)$(TargetName).dll.mdb')"
      SourceFiles="$(TargetDir)$(TargetName).dll.mdb"
      DestinationFolder="$(ResolvedCopyDest)"
    />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/Assembly-CSharp.dll')" SourceFiles="$(VALHEIM_MANAGED)/Assembly-CSharp.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/assembly_valheim.dll')" SourceFiles="$(VALHEIM_MANAGED)/assembly_valheim.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/assembly_utils.dll')" SourceFiles="$(VALHEIM_MANAGED)/assembly_utils.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/assembly_postprocessing.dll')" SourceFiles="$(VALHEIM_MANAGED)/assembly_postprocessing.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/assembly_sunshafts.dll')" SourceFiles="$(VALHEIM_MANAGED)/assembly_sunshafts.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/assembly_guiutils.dll')" SourceFiles="$(VALHEIM_MANAGED)/assembly_guiutils.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/assembly_lux.dll')" SourceFiles="$(VALHEIM_MANAGED)/assembly_lux.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/assembly_simplemeshcombine.dll')" SourceFiles="$(VALHEIM_MANAGED)/assembly_simplemeshcombine.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/assembly_googleanalytics.dll')" SourceFiles="$(VALHEIM_MANAGED)/assembly_googleanalytics.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/PlayFab.dll')" SourceFiles="$(VALHEIM_MANAGED)/PlayFab.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/PlayFabParty.dll')" SourceFiles="$(VALHEIM_MANAGED)/PlayFabParty.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/Splatform.dll')" SourceFiles="$(VALHEIM_MANAGED)/Splatform.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/Splatform.Steam.dll')" SourceFiles="$(VALHEIM_MANAGED)/Splatform.Steam.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/gui_framework.dll')" SourceFiles="$(VALHEIM_MANAGED)/gui_framework.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/com.rlabrecque.steamworks.net.dll')" SourceFiles="$(VALHEIM_MANAGED)/com.rlabrecque.steamworks.net.dll" DestinationFolder="$(ResolvedCopyDest)" />
    <Copy Condition="Exists('$(VALHEIM_MANAGED)/SoftReferenceableAssets.dll')" SourceFiles="$(VALHEIM_MANAGED)/SoftReferenceableAssets.dll" DestinationFolder="$(ResolvedCopyDest)" />
  </Target>

  <Target Name="JotunnPostBuildTask" AfterTargets="Build">
    <CallTarget Targets="CopyToUnity" />
  </Target>

  <Target Name="JotunnPostBuildTaskWin" AfterTargets="Build" Condition=" '$(OS)' == 'Windows_NT' ">
    <Exec Command="powershell.exe -ExecutionPolicy RemoteSigned -File &quot;$(SolutionDir)scripts/publish.ps1&quot; -Target &quot;$(ConfigurationName)&quot; -TargetPath &quot;$(TargetDir.TrimEnd('\'))&quot; -TargetAssembly &quot;$(TargetFileName)&quot; -ValheimPath &quot;$(VALHEIM_INSTALL.TrimEnd('\'))&quot; -DeployPath &quot;$(MOD_DEPLOYPATH.TrimEnd('\'))&quot; -ProjectPath &quot;$(ProjectDir.TrimEnd('\'))&quot; " />
  </Target>

  <Target Name="JotunnPostBuildTaskUnix" AfterTargets="Build" Condition=" '$(OS)' == 'Unix' ">
    <Exec  Command="sh &quot;$(SolutionDir)scripts/publish.sh&quot; --target &quot;$(ConfigurationName)&quot; --target-path &quot;$(TargetDir)&quot; --target-assembly &quot;$(TargetFileName)&quot; --valheim-path &quot;$(VALHEIM_INSTALL)&quot; --deploy-path &quot;$(MOD_DEPLOYPATH)&quot; --project-path &quot;$(ProjectDir)&quot;" />
  </Target>
</Project>